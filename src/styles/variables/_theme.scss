@import '~@angular/material/theming';

$mat-white: (500: white, contrast: (500: $black-87-opacity));

$mat-black: (500: black, contrast: (500: white));

$mat-fusedark: (50: #ececee, 100: #c5c6cb, 200: #9ea1a9, 300: #7d818c, 400: #5c616f, 500: #3c4252, 600: #353a48, 700: #2d323e, 800: #262933, 900: #1e2129, A100: #c5c6cb, A200: #9ea1a9, A400: #5c616f, A700: #2d323e, contrast: (50: $black-87-opacity, 100: $black-87-opacity, 200: $black-87-opacity, 300: white, 400: white, 500: $white-87-opacity, 600: $white-87-opacity, 700: $white-87-opacity, 800: $white-87-opacity, 900: $white-87-opacity, A100: $black-87-opacity, A200: $white-87-opacity, A400: $white-87-opacity, A700: $white-87-opacity));

// Palettes
$primary: mat-palette($mat-orange);
$accent: mat-palette($mat-light-blue, 600, 400, 700);
$warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$theme: mat-light-theme($primary, $accent, $warn);
$background: map-get($theme, background);
$foreground: map-get($theme, foreground);

@import '~@angular/material/theming';

// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
// $theme-primary: mat-palette($mat-teal);
// $bz-color-accent:  mat-palette($mat-green);
// $theme-accent:  mat-palette($mat-light-blue, 500, 200, 700);
$theme-primary: mat-palette($mat-blue-grey, 700, 500, 900);
$theme-accent: mat-palette($mat-blue);
$theme-warn: mat-palette($mat-red);

// The warn palette is optional (defaults to red).
// $theme-warn:    mat-palette($mat-red);
// Create the theme object (a Sass map containing all of the palettes).
$theme: mat-light-theme($theme-primary, $accent, $warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($theme);

$color-primary: map-get($theme, primary);
$color-accent: map-get($theme, accent);
$color-warn: map-get($theme, warn);

$config: mat-typography-config($display-4: mat-typography-level(112px, 112px, 300), $display-3: mat-typography-level(56px, 56px, 400), $display-2: mat-typography-level(45px, 48px, 400), $display-1: mat-typography-level(34px, 40px, 400), $headline: mat-typography-level(24px, 32px, 400), $title: mat-typography-level(20px, 32px, 500), $subheading-2: mat-typography-level(16px, 28px, 400), $subheading-1: mat-typography-level(15px, 24px, 400), $body-2: mat-typography-level(14px, 24px, 500), $body-1: mat-typography-level(14px, 20px, 400), $caption: mat-typography-level(12px, 20px, 400), $button: mat-typography-level(14px, 14px, 500), $input: mat-typography-level(16px, 1.125, 400));

.mat-form-field {
    @include mat-typography-level-to-styles($config, input);
}

/* *
  Core */
$theme-foreground-map: map-get($theme, foreground);
$theme-background-map: map-get($theme, background);
$theme-primary-map: map-get($theme, primary);
$theme-accent-map: map-get($theme, accent);
$theme-warn-map: map-get($theme, warn);
$theme-text: mat-color($theme-foreground-map, text);
$theme-hint-text: mat-color($theme-foreground-map, hint-text);
$theme-secondary-text: mat-color($theme-foreground-map, secondary-text);
$theme-divider: mat-color($theme-foreground-map, divider);
$theme-icon: mat-color($theme-foreground-map, icon);
$theme-background: mat-color($theme-background-map, background);
$theme-app-bar: mat-color($theme-background-map, app-bar);
$theme-background-hover: mat-color($theme-background-map, hover);
$theme-card: mat-color($theme-background-map, card);

/* Logo */
$height__logo: 25px;

/* Colors */
$color__primary: #4caf50;
$color__accent: #e91e63;
$color__warn: #f44336;
$color__primary-contrast: #fff;
$color__accent-contrast: #fff;
$color__warn-contrast: #fff;
$color__text-darkest: rgba(0, 0, 0, 0.87);
$color__text-darker: #333;
$color__text-dark: #666;
$color__text-light: #999;
$background-color: #fafafa;

/* Toolbar */
$height__toolbar: 44px;
$padding-left__toolbar: 24px;
$color__border: #e0e0e0;

@mixin cardBorder {
    border: 1px solid $color__border;
}

$media-gt-md: 'screen and (max-width: 1279px)';

@mixin gt-md {
    @media #{$media-gt-md} {
        @content;
    }
}

$media-md: 'screen and (min-width: 960px) and (max-width: 1279px)';

@mixin md {
    @media #{$media-md} {
        @content;
    }
}

$media-lt-sm: 'screen and (max-width: 959px)';

@mixin lt-sm {
    @media #{$media-lt-sm} {
        @content;
    }
}

$padding__page: 24px;
$padding__page__small: 16px;

@mixin responsivePadding($dir: all, $reverse: false) {
    @if $reverse == false {
        @if $dir == 'all' {
            padding: $padding__page;

            @include gt-md {
                padding: $padding__page__small;
            }
        }
        @else if $dir == 'top' {
            padding-top: $padding__page;

            @include gt-md {
                padding-top: $padding__page__small;
            }
        }
        @else if $dir == 'right' {
            padding-right: $padding__page;

            @include gt-md {
                padding-right: $padding__page__small;
            }
        }
        @else if $dir == 'bottom' {
            padding-bottom: $padding__page;

            @include gt-md {
                padding-bottom: $padding__page__small;
            }
        }
        @else if $dir == 'left' {
            padding-left: $padding__page;

            @include gt-md {
                padding-left: $padding__page__small;
            }
        }
    }
    @else if $reverse == true {
        @if $dir == 'all' {
            margin: -$padding__page;

            @include gt-md {
                margin: -$padding__page__small;
            }
        }
        @else if $dir == 'top' {
            margin-top: -$padding__page;

            @include gt-md {
                margin-top: -$padding__page__small;
            }
        }
        @else if $dir == 'right' {
            margin-right: -$padding__page;

            @include gt-md {
                margin-right: -$padding__page__small;
            }
        }
        @else if $dir == 'bottom' {
            margin-bottom: -$padding__page;

            @include gt-md {
                margin-bottom: -$padding__page__small;
            }
        }
        @else if $dir == 'left' {
            margin-left: -$padding__page;

            @include gt-md {
                margin-left: -$padding__page__small;
            }
        }
    }
}

$padding__page__half: $padding__page / 2;
$padding__page__small__half: $padding__page__small / 2;

@mixin responsivePaddingHalf($dir: all, $reverse: false) {
    @if $reverse == false {
        @if $dir == 'all' {
            padding: $padding__page__half;

            @include gt-md {
                padding: $padding__page__small__half;
            }
        }
        @else if $dir == 'top' {
            padding-top: $padding__page__half;

            @include gt-md {
                padding-top: $padding__page__small__half;
            }
        }
        @else if $dir == 'right' {
            padding-right: $padding__page__half;

            @include gt-md {
                padding-right: $padding__page__small__half;
            }
        }
        @else if $dir == 'bottom' {
            padding-bottom: $padding__page__half;

            @include gt-md {
                padding-bottom: $padding__page__small__half;
            }
        }
        @else if $dir == 'left' {
            padding-left: $padding__page__half;

            @include gt-md {
                padding-left: $padding__page__small__half;
            }
        }
    }
    @else if $reverse == true {
        @if $dir == 'all' {
            margin: -$padding__page__half;

            @include gt-md {
                margin: -$padding__page__small__half;
            }
        }
        @else if $dir == 'top' {
            margin-top: -$padding__page__half;

            @include gt-md {
                margin-top: -$padding__page__small__half;
            }
        }
        @else if $dir == 'right' {
            margin-right: -$padding__page__half;

            @include gt-md {
                margin-right: -$padding__page__small__half;
            }
        }
        @else if $dir == 'bottom' {
            margin-bottom: -$padding__page__half;

            @include gt-md {
                margin-bottom: -$padding__page__small__half;
            }
        }
        @else if $dir == 'left' {
            margin-left: -$padding__page__half;

            @include gt-md {
                margin-left: -$padding__page__small__half;
            }
        }
    }
}

@mixin responsiveMargin($dir: all) {
    @if $dir == 'all' {
        margin: $padding__page;

        @include gt-md {
            margin: $padding__page__small;
        }
    }
    @else if $dir == 'top' {
        margin-top: $padding__page;

        @include gt-md {
            margin-top: $padding__page__small;
        }
    }
    @else if $dir == 'right' {
        margin-right: $padding__page;

        @include gt-md {
            margin-right: $padding__page__small;
        }
    }
    @else if $dir == 'bottom' {
        margin-bottom: $padding__page;

        @include gt-md {
            margin-bottom: $padding__page__small;
        }
    }
    @else if $dir == 'left' {
        margin-left: $padding__page;

        @include gt-md {
            margin-left: $padding__page__small;
        }
    }
}

$margin__page__half: $padding__page / 2;
$margin__page__small__half: $padding__page__small / 2;

@mixin responsiveMarginHalf($dir: all) {
    @if $dir == 'all' {
        margin: $margin__page__half;

        @include gt-md {
            margin: $margin__page__small__half;
        }
    }
    @else if $dir == 'top' {
        margin-top: $margin__page__half;

        @include gt-md {
            margin-top: $margin__page__small__half;
        }
    }
    @else if $dir == 'right' {
        margin-right: $margin__page__half;

        @include gt-md {
            margin-right: $margin__page__small__half;
        }
    }
    @else if $dir == 'bottom' {
        margin-bottom: $margin__page__half;

        @include gt-md {
            margin-bottom: $margin__page__small__half;
        }
    }
    @else if $dir == 'left' {
        margin-left: $margin__page__half;

        @include gt-md {
            margin-left: $margin__page__small__half;
        }
    }
}

@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        display: block;
        content: '';
        width: 100%;
        padding-top: $height / $width * 100%;
    }

    > .content {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}
