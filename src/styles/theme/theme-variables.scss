/*
 * Application global variables.
 */

// Angular Material custom theme
// See https://material.angular.io/guide/theming for more details.
//
// You can also read https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1
// for more insight about Angular Material theming.
@import '~@angular/material/theming';
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.

$app-primary: mat-palette($mat-orange);
//F7941E
$app-accent: mat-palette($mat-blue-grey, A200, A100, A400);
// The warn palette is optional (defaults to red).
$app-warn: mat-palette($mat-red);
// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);
@mixin primary-color {
  $app-primary-color: map-get($app-primary, 800);
  color: $app-primary-color;
}
@mixin primary-background-contrast-color {
  $app-primary-color: map-get($app-primary, 400);
  $font-color: map-get(map-get($app-primary, contrast), 400);
  background-color: $app-primary-color;
  color: $font-color !important;
}
@mixin accent-color {
  $accent-font-color: map-get($accent, 800);
  color: $accent-font-color;
}
@mixin accent-background-color {
  $accent-color: map-get($accent, 700);
  $accent-font-color: map-get(map-get($accent, contrast), 700);
  background-color: $accent-color;
  color: $accent-font-color !important;
}
@mixin selected-style {
  $background-color: map-get($accent, 800);
  $font-color: map-get(map-get($accent, contrast), 800);
  background: $background-color !important;
  color: $font-color !important;
}
@mixin hover-style {
  $background-color: map-get($accent, 400);
  $font-color: map-get(map-get($accent, contrast), 900);
  background: $background-color !important;
  color: $font-color !important;
}
@mixin selected-hover-style {
  $background-color: map-get($accent, 600);
  $font-color: map-get(map-get($accent, contrast), 600);
  background: $background-color !important;
  color: $font-color !important;
}
@mixin item-list {
  margin: 0 0 2em;
  list-style-type: none;
  padding: 0;
  width: 25em;

  .selected,
  .selected > .item-text * {
    background-color: rgb(0, 120, 215) !important;
    color: white;
  }

  li {
    cursor: pointer;
    position: relative;
    margin: 0.5em;
    height: 4em;
  }

  .saying {
    overflow: hidden;
    text-overflow: ellipsis;
    width: 15em;
    white-space: nowrap;
    margin: 5px 0;
  }

  .name {
    @include primary-color;
  }

  .item-container {
    display: flex;
    flex-flow: row wrap;
  }

  > * {
    flex: 1 100%;
  }

  .selectable-item {
    display: flex;
    flex-flow: row wrap;
    flex: 18 auto;
    order: 0;
    padding: 0;
    margin: 0;

    &:hover {
      color: #607d8b;
      color: rgb(0, 120, 215);
      background-color: #ddd;
      left: 1px;
    }

    &.selected:hover {
      color: white;
    }
  }

  .item-text {
    flex: 1 auto;
    order: 2;
    padding: 10px;
  }

  .badge {
    flex: 1 auto;
    order: 1;
    font-size: small;
    color: #ffffff;
    padding: 1.5em 1em 0;
    background-color: rgb(134, 183, 221);
    margin: 0;
    max-width: 1.5em;
    text-align: center;
  }

  button.delete-button {
    margin-right: 12px;
    margin-top: 6px;
    order: 1;
  }
}
@mixin mat-card-layout {
  width: 366px;
  margin: 1em;
  padding: 0;

  .mat-card-header {
    background-color: #85b7de;
    padding: 18px 12px 6px 24px;
    color: #ffffff;
  }

  .mat-card-content {
    padding: 24px;
  }
}
@mixin editarea-margins {
  button {
    margin: 0.5em 1em;
  }

  .editfields {
    margin: 1em;

    .mat-form-field {
      width: 100%;
    }
  }
}
@mixin control-panel-layout {
  margin: 8px 8px 8px 1em;
  display: flex;
  flex-flow: column wrap;

  > * {
    flex: 1 100%;
  }

  .button-panel {
    flex: 1 auto;
    margin: 8px 0;
    order: 1;
  }

  .filter-panel {
    flex: 1 auto;
    margin: 8px 0;
    order: 2;
  }
}
@mixin content-container-layout {
  display: flex;
  flex-flow: row wrap;

  > * {
    flex: 1 100%;
  }

  .list-container {
    flex: 1 auto;
    order: 1;
    max-width: 30em;
  }

  .detail-container {
    flex: 1 auto;
    order: 2;
    max-width: 22em;
  }
}
